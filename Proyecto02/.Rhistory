data()
library(openxlsx)
install.packages("openxlsx")
library(openxlsx)
nombre_fichero <- "mtcars.xlsx"
data("mtcars")
View(mtcars)
df <- data("mtcars")
write.xlsx(df,nombre_fichero,row.names = FALSE)
write.xlsx(df,nombre_fichero,rowNames = FALSE)
getwd()
setwd("C:/Users/pedro/Documents/Git/R/R/Proyecto02/")
getwd()
setwd("C:/Users/pedro/Documents/Git/R/R/Proyecto02/")
write.xlsx(df,nombre_fichero,rowNames = FALSE)
#Obtenemos el dataframe por defecto
df <- data(mtcars)
#Leer el excel
data(mtcars)
#Obtenemos el dataframe por defecto
df <- mtcars
#Almacenamos el fichero
write.xlsx(df,nombre_fichero,rowNames = FALSE)
View(mtcars)
View(mtcars)
View(mtcars)
#Cargamos la libreria (previamente descargada)
if (!requireNamespace("openxlsx", quietly = TRUE)) {
install.packages("openxlsx")
}
nuevo_df <- data.frame(index = rownames(df), df)
rownames(nuevo_df) <- NULL
View(nuevo_df)
View(mtcars)
View(nuevo_df)
View(df)
View(nuevo_df)
#Cogemos el indice del dataframe y lo transformamos en una columna normal
nuevo_df <- data.frame(modelo = rownames(df), df)
rownames(nuevo_df) <- NULL
nuevo_df
#Cogemos el indice del dataframe y lo transformamos en una columna normal
nuevo_df <- data.frame(model = rownames(df), df)
rownames(nuevo_df) <- NULL
#Almacenamos el fichero
write.xlsx(nuevo_df,nombre_fichero,)
#-------------------------------
#Reto
# Instala y carga la biblioteca readxl si aún no está instalada
if (!requireNamespace("readxl", quietly = TRUE)) {
install.packages("readxl")
}
library(readxl)
datos <- read_excel(path = "C:/Users/pedro/Documents/Git/R/R/Proyecto02/mtcars.xlsx")
head(datos)
#Lectura del fichero
#Primero defines la ruta
ruta <- "C:/Users/pedro/Documents/Git/R/R/Proyecto02/mtcars.xlsx")
#Lectura del fichero
#Primero defines la ruta
ruta <- "C:/Users/pedro/Documents/Git/R/R/Proyecto02/mtcars.xlsx"
#Lectura del fichero
#Primero defines la ruta
ruta_fichero <- "C:/Users/pedro/Documents/Git/R/R/Proyecto02/mtcars.xlsx"
excel_sheets(ruta_fichero)
datos <- read_excel(path = ruta, sheet = "cars")
head(datos)
?mtcars
#Nos quedamos con las filas cuya columna am sea 0
automaticos <- datos[datos$am == 0,]
resumen_automaticos <- automaticos[,c("mpg","cyl","hp","gear")]
resumen_automaticos
View(automaticos)
View(resumen_automaticos)
View(automaticos)
#cribamos las columnas que tenemos en el df de automaticos
resumen_automaticos <- automaticos[,c("model","mpg","cyl","hp","gear")]
resumen_automaticos
#Leer datos de una web
library(rvest)
url <- "https://en.wikipedia.org/wiki/Men%27s_high_jump_world_record_progression"
#Leer datos de una web
library(rvest)
install.packages("rvest")
library(rvest)
page <- read_html(url)
View(page)
View(page)
View(page)
tables <- html_table(html_elements(page,"table"))
#Guardamos la tabla de atletas
table_athletes <- tables[[3]]
table_athletes
head(table_athletes,n=6)
table_athletes$Mark
table_athletes$Athlete
ny_data = table_athletes[table_athletes$Venue == "New York",]
ny_data
install.packages("stringr")
install.packages("stringr")
library(stringr)
data(package = "stringr")
head(sentences)
frutas <- c("pera","banana","kiwi","manzana","paraguayo","fresa","pera")
#Coincidencias
str_detect(senteces,"sad")
#Coincidencias
str_detect(sentences,"sad")
str_count(sentences,"sad")
head(sentences, n=1)
str_count(sentences,"sad")
str_which(frutas,"pera")
str_locate(frutas, "pera")
#Localiza un substring en el vector
str_locate(frutas, "ana")
#subconjuntos
str_subset(sentences,"sad")
str_subset(frutas,"ana")
str_sub(frutas,1,4)
meses <- c("enero","febrero","marzo","abril")
str_sub(meses,1,3)
#Longitud de cada  string
str_length(frutas)
str_replace(frutas,"paraguayo","naranja")
#Reemplazar cadena de caracteres
str_sub(frutas[3],1,-1) <- "mango"
str_replace(frutas,"paraguayo","naranja")
frutas <- str_replace(frutas,"paraguayo","naranja")
frutas
#Collapse
str_c(frutas, collapse = ",")
str_unique(frutas)
#Collapse - une todos los elementos como le digas - Dimension 1
frutas_unidas <- str_c(frutas, collapse = ",")
frutas_unidas
frutas_separadas <- str_split(frutas_unidas, ",")
frutas_separadas
